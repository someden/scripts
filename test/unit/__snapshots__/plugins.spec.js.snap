// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@trigen/scripts-* scripts-plugin-babel should return correct scripts object 1`] = `
"{
	\\"start\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"development\\"
		},
		\\"cmd\\": \\"babel-node\\",
		\\"args\\": [
			\\"src/index.js\\"
		]
	},
	\\"build\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"production\\"
		},
		\\"cmd\\": \\"babel\\",
		\\"args\\": [
			\\"./src\\",
			\\"-d\\",
			\\"./lib\\",
			\\"-s\\",
			\\"inline\\"
		]
	}
}"
`;

exports[`@trigen/scripts-* scripts-plugin-eslint should return correct scripts object 1`] = `
"{
	\\"lint:scripts\\": {
		\\"cmd\\": \\"eslint\\",
		\\"args\\": [
			\\"--cache\\",
			\\"src/**/*.{js,jsx,ts,tsx}\\"
		]
	},
	\\"lint\\": [
		\\"lint:scripts\\"
	],
	\\"test\\": [
		\\"lint\\"
	]
}"
`;

exports[`@trigen/scripts-* scripts-plugin-jest should return correct scripts object 1`] = `
"{
	\\"jest\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"test\\"
		},
		\\"cmd\\": \\"jest\\",
		\\"args\\": [
			\\"-c\\",
			\\"jest.config.json\\"
		]
	},
	\\"artifacts\\": {
		\\"cmd\\": \\"node\\",
		\\"args\\": [
			\\"/packages/scripts-plugin-jest/src/artifacts.js\\"
		]
	},
	\\"test\\": [
		\\"jest\\"
	],
	\\"eject\\": [
		{
			\\"cmd\\": \\"cp\\",
			\\"args\\": [
				\\"/packages/scripts-plugin-jest/src/artifacts.js\\",
				\\"scripts/artifacts.js\\"
			]
		}
	]
}"
`;

exports[`@trigen/scripts-* scripts-plugin-rollup should return correct scripts object 1`] = `
"{
	\\"build\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"production\\"
		},
		\\"cmd\\": \\"rollup\\",
		\\"args\\": [
			\\"-c\\"
		]
	},
	\\"eject\\": [
		{
			\\"cmd\\": \\"cp\\",
			\\"args\\": [
				\\"/packages/scripts-plugin-rollup/src/helpers.js\\",
				\\"scripts/rollup-helpers.js\\"
			]
		}
	]
}"
`;

exports[`@trigen/scripts-* scripts-plugin-size-limit should return correct scripts object 1`] = `
"{
	\\"test\\": [
		\\"checkSize\\"
	],
	\\"checkSize\\": {
		\\"cmd\\": \\"size-limit\\",
		\\"args\\": []
	}
}"
`;

exports[`@trigen/scripts-* scripts-plugin-storybook should return correct scripts object 1`] = `
"{
	\\"start:storybook\\": {
		\\"vars\\": {
			\\"STORYBOOK_AUTO_CONFIGURE\\": \\"true\\"
		},
		\\"cmd\\": \\"start-storybook\\",
		\\"args\\": [
			\\"--ci\\",
			\\"-p\\",
			\\"3001\\",
			\\"-c\\",
			\\"/packages/scripts-plugin-storybook/src/storybook\\"
		]
	},
	\\"build:storybook\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"development\\",
			\\"STORYBOOK_AUTO_CONFIGURE\\": \\"true\\"
		},
		\\"cmd\\": \\"build-storybook\\",
		\\"args\\": [
			\\"-c\\",
			\\"/packages/scripts-plugin-storybook/src/storybook\\",
			\\"-o\\",
			\\"storybook-build\\"
		]
	},
	\\"eject\\": [
		{
			\\"cmd\\": \\"cp\\",
			\\"args\\": [
				\\"-R\\",
				\\"/packages/scripts-plugin-storybook/src/jest\\",
				\\"scripts/jest\\"
			]
		},
		{
			\\"cmd\\": \\"cp\\",
			\\"args\\": [
				\\"-R\\",
				\\"/packages/scripts-plugin-storybook/src/storybook\\",
				\\"scripts/storybook\\"
			]
		}
	]
}"
`;

exports[`@trigen/scripts-* scripts-plugin-typescript should return correct scripts object 1`] = `
"{
	\\"typecheck\\": {
		\\"cmd\\": \\"tsc\\",
		\\"args\\": [
			\\"--noEmit\\",
			\\"--pretty\\",
			\\"--skipLibCheck\\"
		]
	},
	\\"test\\": [
		\\"typecheck\\"
	],
	\\"start\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"development\\"
		},
		\\"cmd\\": \\"ts-node-dev\\",
		\\"args\\": [
			\\"-P\\",
			\\"./tsconfig.dev.json\\",
			\\"-r\\",
			\\"tsconfig-paths/register\\",
			\\"--respawn\\",
			\\"--transpileOnly\\",
			\\"--ignore-watch\\",
			\\"node_modules\\",
			\\"src/index.ts\\"
		]
	},
	\\"build:docs\\": [
		{
			\\"cmd\\": \\"typedoc\\",
			\\"args\\": [
				\\"./src\\",
				\\"--out\\",
				\\"./docs\\",
				\\"--excludeExternals\\"
			],
			\\"ignoreResult\\": true
		},
		{
			\\"cmd\\": \\"touch\\",
			\\"args\\": [
				\\"docs/.nojekyll\\"
			]
		}
	],
	\\"build\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"production\\"
		},
		\\"cmd\\": \\"tsc\\",
		\\"args\\": [
			\\"--rootDir\\",
			\\"./src\\",
			\\"--outDir\\",
			\\"./lib\\"
		]
	}
}"
`;

exports[`@trigen/scripts-* scripts-preset-lib should return correct scripts object 1`] = `
"{
	\\"lint:scripts\\": {
		\\"cmd\\": \\"eslint\\",
		\\"args\\": [
			\\"--cache\\",
			\\"src/**/*.{js,jsx,ts,tsx}\\"
		]
	},
	\\"lint\\": [
		\\"lint:scripts\\"
	],
	\\"test\\": [
		\\"lint\\"
	],
	\\"cleanPublish\\": [
		\\"test\\",
		{
			\\"cmd\\": \\"clean-publish\\",
			\\"args\\": []
		}
	]
}"
`;

exports[`@trigen/scripts-* scripts-preset-node-app should return correct scripts object 1`] = `
"{
	\\"start\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"development\\"
		},
		\\"cmd\\": \\"babel-node\\",
		\\"args\\": [
			\\"src/index.js\\"
		]
	},
	\\"build\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"production\\"
		},
		\\"cmd\\": \\"rollup\\",
		\\"args\\": [
			\\"-c\\"
		]
	},
	\\"lint:scripts\\": {
		\\"cmd\\": \\"eslint\\",
		\\"args\\": [
			\\"--cache\\",
			\\"src/**/*.{js,jsx,ts,tsx}\\"
		]
	},
	\\"lint\\": [
		\\"lint:scripts\\"
	],
	\\"test\\": [
		\\"lint\\",
		\\"jest\\",
		\\"build\\"
	],
	\\"jest\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"test\\"
		},
		\\"cmd\\": \\"jest\\",
		\\"args\\": [
			\\"-c\\",
			\\"jest.config.json\\"
		]
	},
	\\"artifacts\\": {
		\\"cmd\\": \\"node\\",
		\\"args\\": [
			\\"/packages/scripts-plugin-jest/src/artifacts.js\\"
		]
	},
	\\"eject\\": [
		{
			\\"cmd\\": \\"cp\\",
			\\"args\\": [
				\\"/packages/scripts-plugin-jest/src/artifacts.js\\",
				\\"scripts/artifacts.js\\"
			]
		},
		{
			\\"cmd\\": \\"cp\\",
			\\"args\\": [
				\\"/packages/scripts-plugin-rollup/src/helpers.js\\",
				\\"scripts/rollup-helpers.js\\"
			]
		}
	]
}"
`;

exports[`@trigen/scripts-* scripts-preset-react-app should return correct scripts object 1`] = `
"{
	\\"start\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"development\\",
			\\"REACT_APP_PREACT\\": \\"false\\"
		},
		\\"cmd\\": \\"node\\",
		\\"args\\": [
			\\"/packages/scripts-preset-react-app/src/start.js\\"
		]
	},
	\\"build\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"production\\",
			\\"REACT_APP_TRANSPILE\\": \\"{}\\",
			\\"REACT_APP_BDSL\\": \\"{}\\",
			\\"REACT_APP_PREACT\\": \\"false\\"
		},
		\\"cmd\\": \\"node\\",
		\\"args\\": [
			\\"/packages/scripts-preset-react-app/src/build.js\\"
		]
	},
	\\"typecheck\\": {
		\\"cmd\\": \\"tsc\\",
		\\"args\\": [
			\\"--noEmit\\",
			\\"--pretty\\",
			\\"--skipLibCheck\\"
		]
	},
	\\"test\\": [
		\\"typecheck\\",
		\\"lint\\",
		\\"jest\\",
		\\"build\\"
	],
	\\"build:docs\\": [
		{
			\\"cmd\\": \\"typedoc\\",
			\\"args\\": [
				\\"./src\\",
				\\"--out\\",
				\\"./docs\\",
				\\"--excludeExternals\\"
			],
			\\"ignoreResult\\": true
		},
		{
			\\"cmd\\": \\"touch\\",
			\\"args\\": [
				\\"docs/.nojekyll\\"
			]
		}
	],
	\\"lint:scripts\\": {
		\\"cmd\\": \\"eslint\\",
		\\"args\\": [
			\\"--cache\\",
			\\"src/**/*.{js,jsx,ts,tsx}\\"
		]
	},
	\\"lint\\": [
		\\"lint:styles\\",
		\\"lint:scripts\\"
	],
	\\"start:storybook\\": {
		\\"vars\\": {
			\\"STORYBOOK_AUTO_CONFIGURE\\": \\"false\\",
			\\"REACT_APP_STORYBOOK_AUTO_CONFIGURE\\": \\"true\\"
		},
		\\"cmd\\": \\"start-storybook\\",
		\\"args\\": [
			\\"--ci\\",
			\\"-p\\",
			\\"3001\\",
			\\"-c\\",
			\\"/packages/scripts-preset-react-app/src/storybook\\"
		]
	},
	\\"build:storybook\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"development\\",
			\\"STORYBOOK_AUTO_CONFIGURE\\": \\"false\\",
			\\"REACT_APP_STORYBOOK_AUTO_CONFIGURE\\": \\"true\\"
		},
		\\"cmd\\": \\"build-storybook\\",
		\\"args\\": [
			\\"-c\\",
			\\"/packages/scripts-preset-react-app/src/storybook\\",
			\\"-o\\",
			\\"storybook-build\\"
		]
	},
	\\"eject\\": [
		{
			\\"cmd\\": \\"cp\\",
			\\"args\\": [
				\\"-R\\",
				\\"/packages/scripts-plugin-storybook/src/jest\\",
				\\"scripts/jest\\"
			]
		},
		{
			\\"cmd\\": \\"cp\\",
			\\"args\\": [
				\\"-R\\",
				\\"/packages/scripts-plugin-storybook/src/storybook\\",
				\\"scripts/storybook\\"
			]
		},
		{
			\\"cmd\\": \\"cp\\",
			\\"args\\": [
				\\"/packages/scripts-plugin-jest/src/artifacts.js\\",
				\\"scripts/artifacts.js\\"
			]
		}
	],
	\\"jest\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"test\\"
		},
		\\"cmd\\": \\"jest\\",
		\\"args\\": [
			\\"-c\\",
			\\"jest.config.json\\"
		]
	},
	\\"artifacts\\": {
		\\"cmd\\": \\"node\\",
		\\"args\\": [
			\\"/packages/scripts-plugin-jest/src/artifacts.js\\"
		]
	},
	\\"lint:styles\\": {
		\\"cmd\\": \\"stylelint\\",
		\\"args\\": [
			\\"src/**/*.css\\"
		]
	},
	\\"build:favicons\\": {
		\\"cmd\\": \\"favicons\\",
		\\"args\\": [
			\\"-v\\",
			\\"-H\\",
			\\"src/favicon.svg\\",
			\\"-p\\",
			\\"favicons\\",
			\\"-d\\",
			\\"src/favicons\\"
		]
	},
	\\"build:render\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"production\\",
			\\"RENDERING\\": \\"true\\",
			\\"REACT_APP_TRANSPILE\\": \\"{}\\",
			\\"REACT_APP_BDSL\\": \\"{}\\",
			\\"REACT_APP_PREACT\\": \\"false\\"
		},
		\\"cmd\\": \\"node\\",
		\\"args\\": [
			\\"/packages/scripts-preset-react-app/src/render.js\\"
		]
	},
	\\"render\\": [
		\\"build:render\\",
		{
			\\"cmd\\": \\"node\\",
			\\"args\\": [
				\\"build/render\\"
			]
		}
	],
	\\"serve\\": {
		\\"vars\\": {
			\\"NODE_ENV\\": \\"production\\"
		},
		\\"cmd\\": \\"node\\",
		\\"args\\": [
			\\"/packages/scripts-preset-react-app/src/serve.js\\"
		]
	}
}"
`;
